# -*- coding: utf-8 -*-
"""one-shot-learning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16i70hRRFjcnYglRWavrGlhX0Q8TvNRG3

**SIAMESE NETWORK**

**Importing libraries**
"""

import tensorflow as tf
import tensorflow.keras.backend as K
import numpy as np
from tensorflow.keras.models import Sequential,Model
from tensorflow.keras.layers import Dense,Flatten,Conv2D,MaxPool2D,BatchNormalization,Input,Lambda

"""**siamese network**"""

def siamese(input_shape):
  
  base_input=Input(input_shape)
  test_input=Input(input_shape)

  model=Sequential()
  model.add(Conv2D(512,(3,3),padding='same',activation="relu",kernel_initializer="he_normal"))
  model.add(MaxPool2D((2,2),padding='same'))
  model.add(Dropout(0.2))
  model.add(BatchNormalization())
  model.add(Conv2D(1024,(3,3),padding='same',activation="relu",kernel_initializer="he_normal"))
  model.add(MaxPool2D((2,2),padding='same'))
  model.add(Dropout(0.2))
  model.add(BatchNormalization())
  model.add(Conv2D(1024,(3,3),padding='same',activation="relu",kernel_initializer="he_normal"))
  model.add(MaxPool2D((2,2),padding='same'))
  model.add(BatchNormalization())
  model.add(Dropout(0.2))
  model.add(Conv2D(512,(3,3),padding='same',activation="relu",kernel_initializer="he_normal"))
  model.add(MaxPool2D((2,2),padding='same'))
  model.add(Conv2D(256,(3,3),padding="same",activation="relu",kernel_initializer="he_normal"))
  model.add(Flatten())
  model.add(Dense(128,activation="sigmoid",name="OUT"))

  Aencod=model(base_input)
  Tencod=model(test_input)

  dLayer=Lambda(lambda tensor:K.abs(tensor[0]-tensor[1]))
  ldist=dLayer([Aencod,Tencod])
  output=Dense(1,activation="sigmoid")(ldist)
  network=Model(inputs=[base_input,test_input],outputs=output)
  return (network,model)       
        

model=siamese((128,128,3))

model.summary()
